(function() {var implementors = {};
implementors["competitive_library"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/algorithm/convex_hull_trick/struct.LinearFunction.html\" title=\"struct competitive_library::algorithm::convex_hull_trick::LinearFunction\">LinearFunction</a>","synthetic":true,"types":["competitive_library::algorithm::convex_hull_trick::LinearFunction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/algorithm/convex_hull_trick/struct.ConvexHullTrick.html\" title=\"struct competitive_library::algorithm::convex_hull_trick::ConvexHullTrick\">ConvexHullTrick</a>","synthetic":true,"types":["competitive_library::algorithm::convex_hull_trick::ConvexHullTrick"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/algorithm/eratosthenes/struct.Sieve.html\" title=\"struct competitive_library::algorithm::eratosthenes::Sieve\">Sieve</a>","synthetic":true,"types":["competitive_library::algorithm::eratosthenes::Sieve"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/algorithm/fast_eratosthenes/struct.Eratosthenes.html\" title=\"struct competitive_library::algorithm::fast_eratosthenes::Eratosthenes\">Eratosthenes</a>","synthetic":true,"types":["competitive_library::algorithm::fast_eratosthenes::Eratosthenes"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/dijkstra/struct.Node.html\" title=\"struct competitive_library::graph::dijkstra::Node\">Node</a>","synthetic":true,"types":["competitive_library::graph::dijkstra::Node"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/dijkstra_restorepath/struct.Node.html\" title=\"struct competitive_library::graph::dijkstra_restorepath::Node\">Node</a>","synthetic":true,"types":["competitive_library::graph::dijkstra_restorepath::Node"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"competitive_library/graph/euler_tour/enum.Vertex.html\" title=\"enum competitive_library::graph::euler_tour::Vertex\">Vertex</a>","synthetic":true,"types":["competitive_library::graph::euler_tour::Vertex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/heavy_hight_decomposition/struct.HeavyLightDecomposition.html\" title=\"struct competitive_library::graph::heavy_hight_decomposition::HeavyLightDecomposition\">HeavyLightDecomposition</a>","synthetic":true,"types":["competitive_library::graph::heavy_hight_decomposition::HeavyLightDecomposition"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/lowest_common_ancestor_doubling/struct.LowestCommonAncestor.html\" title=\"struct competitive_library::graph::lowest_common_ancestor_doubling::LowestCommonAncestor\">LowestCommonAncestor</a>","synthetic":true,"types":["competitive_library::graph::lowest_common_ancestor_doubling::LowestCommonAncestor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/lowest_common_ancestor_rmq/struct.LowestCommonAncestor.html\" title=\"struct competitive_library::graph::lowest_common_ancestor_rmq::LowestCommonAncestor\">LowestCommonAncestor</a>","synthetic":true,"types":["competitive_library::graph::lowest_common_ancestor_rmq::LowestCommonAncestor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/minimun_spanning_tree_kruskal/struct.Edge.html\" title=\"struct competitive_library::graph::minimun_spanning_tree_kruskal::Edge\">Edge</a>","synthetic":true,"types":["competitive_library::graph::minimun_spanning_tree_kruskal::Edge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/tree_diamiter/struct.UnWeightedEdge.html\" title=\"struct competitive_library::graph::tree_diamiter::UnWeightedEdge\">UnWeightedEdge</a>","synthetic":true,"types":["competitive_library::graph::tree_diamiter::UnWeightedEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/tree_diamiter/struct.WeightedEdge.html\" title=\"struct competitive_library::graph::tree_diamiter::WeightedEdge\">WeightedEdge</a>","synthetic":true,"types":["competitive_library::graph::tree_diamiter::WeightedEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/graph/zero_one_bfs/struct.Node.html\" title=\"struct competitive_library::graph::zero_one_bfs::Node\">Node</a>","synthetic":true,"types":["competitive_library::graph::zero_one_bfs::Node"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/other/binary_search/struct.BinarySearch.html\" title=\"struct competitive_library::other::binary_search::BinarySearch\">BinarySearch</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::other::binary_search::BinarySearch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/other/xorshift/struct.XorShift.html\" title=\"struct competitive_library::other::xorshift::XorShift\">XorShift</a>","synthetic":true,"types":["competitive_library::other::xorshift::XorShift"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/binary_trie/struct.BinaryTrie.html\" title=\"struct competitive_library::structure::binary_trie::BinaryTrie\">BinaryTrie</a>","synthetic":true,"types":["competitive_library::structure::binary_trie::BinaryTrie"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/cumsum_2d/struct.CumSum2D.html\" title=\"struct competitive_library::structure::cumsum_2d::CumSum2D\">CumSum2D</a>","synthetic":true,"types":["competitive_library::structure::cumsum_2d::CumSum2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/disjoint_set_union/struct.DisjointSetUnion.html\" title=\"struct competitive_library::structure::disjoint_set_union::DisjointSetUnion\">DisjointSetUnion</a>","synthetic":true,"types":["competitive_library::structure::disjoint_set_union::DisjointSetUnion"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/disjoint_set_union_undo/struct.DisjointSetUnionRollback.html\" title=\"struct competitive_library::structure::disjoint_set_union_undo::DisjointSetUnionRollback\">DisjointSetUnionRollback</a>","synthetic":true,"types":["competitive_library::structure::disjoint_set_union_undo::DisjointSetUnionRollback"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/disjoint_sparse_table/struct.Add.html\" title=\"struct competitive_library::structure::disjoint_sparse_table::Add\">Add</a>","synthetic":true,"types":["competitive_library::structure::disjoint_sparse_table::Add"]},{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/disjoint_sparse_table/struct.DisjointSparseTable.html\" title=\"struct competitive_library::structure::disjoint_sparse_table::DisjointSparseTable\">DisjointSparseTable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"competitive_library/structure/disjoint_sparse_table/trait.SemiGroup.html\" title=\"trait competitive_library::structure::disjoint_sparse_table::SemiGroup\">SemiGroup</a>&gt;::<a class=\"type\" href=\"competitive_library/structure/disjoint_sparse_table/trait.SemiGroup.html#associatedtype.T\" title=\"type competitive_library::structure::disjoint_sparse_table::SemiGroup::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::disjoint_sparse_table::DisjointSparseTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/fenwick_tree/struct.Add.html\" title=\"struct competitive_library::structure::fenwick_tree::Add\">Add</a>","synthetic":true,"types":["competitive_library::structure::fenwick_tree::Add"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/fenwick_tree/struct.FenwickTree.html\" title=\"struct competitive_library::structure::fenwick_tree::FenwickTree\">FenwickTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive_library/structure/fenwick_tree/trait.Monoid.html\" title=\"trait competitive_library::structure::fenwick_tree::Monoid\">Monoid</a>&gt;::<a class=\"type\" href=\"competitive_library/structure/fenwick_tree/trait.Monoid.html#associatedtype.T\" title=\"type competitive_library::structure::fenwick_tree::Monoid::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::fenwick_tree::FenwickTree"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/segment_tree/struct.Min.html\" title=\"struct competitive_library::structure::segment_tree::Min\">Min</a>","synthetic":true,"types":["competitive_library::structure::segment_tree::Min"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/segment_tree/struct.Max.html\" title=\"struct competitive_library::structure::segment_tree::Max\">Max</a>","synthetic":true,"types":["competitive_library::structure::segment_tree::Max"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/segment_tree/struct.SegmentTree.html\" title=\"struct competitive_library::structure::segment_tree::SegmentTree\">SegmentTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive_library/structure/segment_tree/trait.Monoid.html\" title=\"trait competitive_library::structure::segment_tree::Monoid\">Monoid</a>&gt;::<a class=\"type\" href=\"competitive_library/structure/segment_tree/trait.Monoid.html#associatedtype.T\" title=\"type competitive_library::structure::segment_tree::Monoid::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::segment_tree::SegmentTree"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/skew_heap/struct.Heap.html\" title=\"struct competitive_library::structure::skew_heap::Heap\">Heap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::skew_heap::Heap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/skew_heap/struct.SkewHeap.html\" title=\"struct competitive_library::structure::skew_heap::SkewHeap\">SkewHeap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::skew_heap::SkewHeap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/skew_heap_lazy/struct.Heap.html\" title=\"struct competitive_library::structure::skew_heap_lazy::Heap\">Heap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::skew_heap_lazy::Heap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/skew_heap_lazy/struct.SkewHeap.html\" title=\"struct competitive_library::structure::skew_heap_lazy::SkewHeap\">SkewHeap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::skew_heap_lazy::SkewHeap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/sparse_table/struct.Min.html\" title=\"struct competitive_library::structure::sparse_table::Min\">Min</a>","synthetic":true,"types":["competitive_library::structure::sparse_table::Min"]},{"text":"impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/sparse_table/struct.SparseTable.html\" title=\"struct competitive_library::structure::sparse_table::SparseTable\">SparseTable</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"competitive_library/structure/sparse_table/trait.Band.html\" title=\"trait competitive_library::structure::sparse_table::Band\">Band</a>&gt;::<a class=\"type\" href=\"competitive_library/structure/sparse_table/trait.Band.html#associatedtype.T\" title=\"type competitive_library::structure::sparse_table::Band::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["competitive_library::structure::sparse_table::SparseTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"competitive_library/structure/weighted_disjoint_set_union/struct.WeightedDisjointSetUnion.html\" title=\"struct competitive_library::structure::weighted_disjoint_set_union::WeightedDisjointSetUnion\">WeightedDisjointSetUnion</a>","synthetic":true,"types":["competitive_library::structure::weighted_disjoint_set_union::WeightedDisjointSetUnion"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()